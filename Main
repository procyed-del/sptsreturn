--- Open Code, pode usar a vontade, By Raxixe
local Rayfield =  loadstring(game:HttpGet("https://raw.githubusercontent.com/procyed-del/sptsreturn/refs/heads/main/Lybrary"))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/procyed-del/sptsreturn/refs/heads/main/version"))()
_G.HitboxSize = 4
_G.HitboxActive = false
_G.timer = false
_G.show = false
local players = game:GetService("Players")
local LocalPlayer = players.LocalPlayer

local function hitboxnormal()
local players = game:GetService("Players")
local player = players.LocalPlayer
local PlayerName = player.Name
local soco = Workspace:WaitForChild(PlayerName):WaitForChild("Soco").Handle
soco.Size = Vector3.new(4, 4, 4)
soco.Massless = true
end
loadstring(game:HttpGet("https://raw.githubusercontent.com/procyed-del/sptsreturn/refs/heads/main/version"))()


local Window = Rayfield:CreateWindow({
    Name = "Mandrake School ",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Loading",
    LoadingSubtitle = "by Rax",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 loadstring(game:HttpGet("https://raw.githubusercontent.com/procyed-del/sptsreturn/refs/heads/main/version"))()

 local Tab = Window:CreateTab("Main", 4483362458)
 local Section = Tab:CreateSection("M1 Mods")

local Toggle = Tab:CreateToggle({
   Name = "less cooldown",
   CurrentValue = false,
   Flag = "Toggle1", 
   Callback = function(Value)
      _G.timer = Value

      while _G.timer do
         task.wait()
          local char = LocalPlayer.Character
      
          if char then
              local punch_tool = char:FindFirstChild("Soco")
              
              if punch_tool and punch_tool:FindFirstChild("Handle") then
                  punch_tool.Handle.Massless = true
                  task.wait()
                  punch_tool.Enabled = true
              end
          end
      end
   end,
})


local Toggle = Tab:CreateToggle({
    Name = "Hitbox",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        _G.HitboxActive = Value
        while _G.HitboxActive do
         task.wait()
         local char = LocalPlayer.Character
     
         if char then
             local punch_tool = char:FindFirstChild("Soco")
             
             if punch_tool and punch_tool:FindFirstChild("Handle") then
                 punch_tool.Handle.Massless = true
                 punch_tool.Handle.Size = Vector3.new(1, 1, 1)
                 wait()
                 punch_tool.Handle.Size = Vector3.new(_G.HitboxSize, _G.HitboxSize, _G.HitboxSize)
                 punch_tool:Activate()
             end
         end
     end
        if _G.HitboxActive == false then
            hitboxnormal()
        end
    end,
 })


 local Slider = Tab:CreateSlider({
    Name = "hitbox size",
    Range = {4, 40},
    Increment = 1,
    Suffix = "",
    CurrentValue = 4,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        _G.HitboxSize = Value

    end,
 })
 loadstring(game:HttpGet("https://raw.githubusercontent.com/procyed-del/sptsreturn/refs/heads/main/version"))()
